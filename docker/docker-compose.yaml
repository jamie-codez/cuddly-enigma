---
services:
  caddy:
    image: caddy:latest
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/data:/data
      - ./caddy/config:/config
    depends_on:
      - app
    healthcheck:
      test: [ "CMD", "caddy", "healthcheck" ]
      interval: 10s
      timeout: 5s
      retries: 3

  app:
    build: .
    container_name: devops-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./app:/app
      - /app/node_modules
    env_file:
      - ./app/.env
    depends_on:
      - mongo

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: unless-stopped
    ports:
      - ${MONGO_PORT}
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - mongo:/data/db

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - ${ME_CONFIG_PORT}
    environment:
      - ME_CONFIG_MONGODB_SERVER=${MONGO_HOST}
      - ME_CONFIG_MONGODB_PORT=${MONGO_PORT}
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${ME_CONFIG_BASICAUTH_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${ME_CONFIG_BASICAUTH_PASSWORD}
      - ME_CONFIG_MONGODB_DATABASE=devops_app
    depends_on:
      - mongo

volumes:
  mongo:
    name: mongo
    driver: local
  caddy:
    name: caddy
    driver: local